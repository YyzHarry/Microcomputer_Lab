C51 COMPILER V9.01   UART_SIGNAL                                                           04/11/2017 19:52:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART_SIGNAL
OBJECT MODULE PLACED IN UART_Signal.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE UART_Signal.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <c8051f020.h>
   2          #define RX_LEN 20
   3          #define SYSCLK 22118400
   4          #define BAUDRATE 1200
   5          //-----------------------------------与键盘输入有关的定义
   6          #define NOKEY 0xFF
   7          #define uchar unsigned char
   8          uchar ch;
   9          
  10          unsigned char xdata seg _at_ (0x8000); 
  11          unsigned char xdata cs _at_ (0x8001); 
  12          const unsigned char code segs[] = 
  13                  {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
  14                  0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
  15          const unsigned char code css[] = {0x7, 0xB, 0xD, 0xE};
  16          //-------------------------------------------------------
  17          
  18          char RxBuf[RX_LEN];
  19          unsigned char RxIdx;
  20          
  21          void PORT_Init()
  22          {
  23   1              EMI0CF=0x1F;
  24   1              XBR0 = 0x04; // UART0 使能
  25   1              XBR2 = 0x42; // 使能交叉开关
  26   1              P0MDOUT=0XC0;
  27   1              P1MDOUT=0XFF;
  28   1              P2MDOUT=0XFF;
  29   1              P3MDOUT=0XFF;
  30   1              P0MDOUT |= 0x01; // TX0 设置为推挽输出
  31   1      
  32   1      }
  33          void UART0_Init (void)
  34          {
  35   1              SCON0 = 0x50; // SCON0: 串口方式1 使能RX
  36   1              TMOD = 0x20; // 定时器 1 采用自装载模式
  37   1              TH1 = -(SYSCLK/BAUDRATE/16/12); // Timer1 载入值
  38   1              TR1 = 1; // 启动 Timer1
  39   1              PCON |= 0x80; // SMOD0 = 1
  40   1      }
  41          void SYSCLK_Init (void)
  42          {
  43   1              int i;
  44   1              OSCXCN = 0x67; // 启动外部晶振
  45   1              for (i=0; i < 256; i++); // 延时一段时间
  46   1              while (!(OSCXCN & 0x80)); // 等待振荡稳定
  47   1              OSCICN = 0x88; // 使用外部振荡器
  48   1      }
  49          void Delay(int k)
  50          {
  51   1              int i;
  52   1              for (i = 0; i < k; ++i);
  53   1      }
  54          char getkey()
  55          {
C51 COMPILER V9.01   UART_SIGNAL                                                           04/11/2017 19:52:16 PAGE 2   

  56   1              int m;
  57   1              uchar i;
  58   1              uchar key;
  59   1              const uchar code dec[] = {0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0};
  60   1              const char code trans[] = {'c', '9', '5', '1', 'd', '0', '6', '2', 'e', 'a', '7', '3', 'f', 'b', '8', '4'
             -};
  61   1              P4 = 0x0F;
  62   1              Delay(100);
  63   1              i = ~P4 & 0x0F;
  64   1              if (i == 0) return NOKEY;                         
  65   1              key = dec[i] * 4; 
  66   1              for(m = 0; m < 100; m++)
  67   1                      Delay(1000);
  68   1              P4 = 0xF0;
  69   1              Delay(100);
  70   1              i = ~P4;
  71   1              i >>= 4;
  72   1              if (i == 0) return NOKEY;
  73   1              key = key + dec[i];
  74   1              key = trans[key]; 
  75   1              return key;
  76   1      }
  77          
  78          void UART0_ISR (void) interrupt 4
  79          {
  80   1              char c;
  81   1              uchar i;
  82   1              if (RI0 == 1) { // 接收中断
  83   2                      RI0 = 0; // 清中断标记
  84   2                      c = SBUF0; // 读取接收到的数
  85   2                      if ((c>='a' && c<='f')||(c>='0' && c<='9')){
  86   3                              for(i=0;i<RX_LEN-1;i++)
  87   3                                      RxBuf[i] = RxBuf[i+1];
  88   3                              RxBuf[RX_LEN-1] = c;
  89   3                      }
  90   2              } 
  91   1              else if (TI0 == 1) { // 发送中断
  92   2                      TI0 = 0; // 清中断标记
  93   2                      if(ch != NOKEY) {
  94   3                              SBUF0 = ch;
  95   3                              ch = NOKEY;
  96   3                      }
  97   2              }
  98   1      }
  99          
 100          void main (void) {
 101   1              uchar tmp;
 102   1              WDTCN = 0xde; // 禁止看门狗
 103   1              WDTCN = 0xad;
 104   1              SYSCLK_Init (); // 初始化时钟
 105   1              PORT_Init (); // 初始化交叉开关和端口
 106   1              UART0_Init (); // 初始化 UART0
 107   1              ES0 = 1; // 允许串口中断
 108   1              EA = 1; // 允许全局中断
 109   1              
 110   1              tmp = NOKEY;
 111   1              ch = tmp;
 112   1              TI0 = 1; // 启动发送
 113   1              
 114   1              //显示屏上从左到右依次显示最近4个读入的数
 115   1              while (1) {
 116   2                      char c;
C51 COMPILER V9.01   UART_SIGNAL                                                           04/11/2017 19:52:16 PAGE 3   

 117   2                      uchar i;
 118   2                      tmp = getkey(); 
 119   2                      TI0 = 0;
 120   2                      if(tmp != NOKEY){
 121   3                              ch = tmp;
 122   3                              TI0 = 1;  // 启动发送
 123   3                      }
 124   2                      
 125   2                      for(i = 16; i < 20; ++i) {
 126   3                                      c = RxBuf[i];
 127   3                                      if(c>='0' && c<='9')
 128   3                                              seg = segs[c-'0']; 
 129   3                                      else
 130   3                                              seg = segs[c-'a'+10]; 
 131   3                                      cs = css[19-i];  //
 132   3                                      Delay(1000);
 133   3                      }
 134   2              }
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    441    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
