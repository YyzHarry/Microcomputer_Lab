C51 COMPILER V9.01   CGRAM                                                                 05/09/2017 19:30:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CGRAM
OBJECT MODULE PLACED IN CGRAM.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CGRAM.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <c8051f020.h>
   2          #include <stdio.h>
   3          #define SYSCLK 22118400
   4          #define DELAY_LCD 1000
   5          typedef unsigned char uchar;
   6          
   7          void SYSCLK_Init (void)
   8          {
   9   1              int i;
  10   1              OSCXCN = 0x67; 
  11   1              for (i=0; i < 256; i++); 
  12   1              while (!(OSCXCN & 0x80)); 
  13   1              OSCICN = 0x88; 
  14   1      }
  15          
  16          void Delay(int num)
  17          {
  18   1              int i;
  19   1              for(i=0;i<num;i++);
  20   1              return;
  21   1      }
  22          
  23          char isLcdBusy(void)
  24          {
  25   1              P5 = 0xFF; // 设置 P5 为输入模式
  26   1              P6 = 0x82; // RS=0, RW=1, EN=0
  27   1              Delay(DELAY_LCD); 
  28   1              P6 = 0x83; // RS=0, RW=1, EN=1
  29   1              Delay(DELAY_LCD);
  30   1              return (P5 & 0x80); // 返回忙状态
  31   1      }
  32          
  33          // write the control command
  34          void Lcd1602_Write_Command(unsigned char Command)
  35          {
  36   1              while(isLcdBusy());
  37   1              P5 = Command;           // command to be written
  38   1              P6 = 0x80;                              // RS=0, RW=0, EN=0
  39   1              Delay(DELAY_LCD);   // delay
  40   1              P6 = 0x81;                              // RS=0, RW=0, EN=1
  41   1              Delay(DELAY_LCD);
  42   1              P6 = 0x80;                              // RS=0, RW=0, EN=0
  43   1      }
  44          
  45          // write the "Data" into the specific place (row,column)
  46          void Lcd1602_Write_Data(Data)
  47          {
  48   1              P5 = Data;              // data to be writen
  49   1              P6 = 0x84;              // RS=1, RW=0, EN=0
  50   1              Delay(DELAY_LCD);
  51   1              P6 = 0x85;              // RS=1, RW=0, EN=1
  52   1              Delay(DELAY_LCD);
  53   1              P6 = 0x84;              // RS=1, RW=0, EN=0
  54   1      }
  55          void Lcd1602_WriteXY_Data(uchar row, uchar column, uchar Data)
C51 COMPILER V9.01   CGRAM                                                                 05/09/2017 19:30:09 PAGE 2   

  56          {
  57   1              while(isLcdBusy());
  58   1              if (row == 1)
  59   1                      column |= 0xC0;         // D7=1, offset address is 0x40
  60   1              else
  61   1                      column |= 0x80;         // D7=1
  62   1              Lcd1602_Write_Command(column);  // set the address
  63   1              Lcd1602_Write_Data(Data);                       // write the "Data"
  64   1      }
  65          
  66          Lcd1602_init(void)
  67          {
  68   1              Lcd1602_Write_Command(0x38);
  69   1              Lcd1602_Write_Command(0x08);
  70   1              Lcd1602_Write_Command(0x01);
  71   1              Lcd1602_Write_Command(0x06);
  72   1              Lcd1602_Write_Command(0x0C);
  73   1              Lcd1602_Write_Command(0x80);
  74   1              Lcd1602_Write_Command(0x02);
  75   1      }
  76          
  77          void main(void)
  78          {
  79   1              uchar i, j;
  80   1              WDTCN = 0xde;
  81   1              WDTCN = 0xad;  // Stop Watch-Dog
  82   1              SYSCLK_Init();
  83   1              P74OUT = 0x30; // P6_out
  84   1              Lcd1602_init();
  85   1              for (i = 0; i < 8; i++) {
  86   2                      Lcd1602_Write_Command(0x80);                    // display the first line
  87   2                      for (j = 0; j < 16; j++)
  88   2                              Lcd1602_Write_Data(i * 32 + j);         // data
  89   2                      Lcd1602_Write_Command(0xC0);                    // display the second line
  90   2                      for (j = 0; j < 16; j++)
  91   2                              Lcd1602_Write_Data(i * 32 + j + 16);
  92   2                      for (j = 0; j < 255; j++)
  93   2                              Delay(10000); 
  94   2              }
  95   1              while(1);  // stop
  96   1      }
*** WARNING C290 IN LINE 75 OF CGRAM.C: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    291    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
